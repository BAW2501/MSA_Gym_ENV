import numpy as np

OneHot_20D = {
    'A': np.array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'C': np.array([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'D': np.array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'E': np.array([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'F': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]),
    'G': np.array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'H': np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'I': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'K': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
    'L': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'M': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]),
    'N': np.array([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'P': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]),
    'Q': np.array([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'R': np.array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    'S': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]),
    'T': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]),
    'V': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]),
    'W': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]),
    'Y': np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])}

BLOSUM62_20D = {
    'A': np.array([.2901, .0446, .0427, .041, .065, .0559, .0552, .0783, .042, .0471, .0445, .057, .0522, .0338, .0568, .1099, .073, .0303, .0405, .07]),
    'C': np.array([.0216, .0078, .009, .0075, .4837, .0088, .0074, .0108, .0076, .0162, .0162, .0086, .0161, .0106, .0103, .0175, .0178, .0076, .0093, .0192]),
    'D': np.array([.0297, .031, .0831, .3974, .0163, .0471, .0902, .0337, .0382, .0177, .0152, .0415, .0201, .0169, .031, .0489, .0375, .0152, .0187, .0178]),
    'E': np.array([.0405, .0523, .0494, .0914, .0163, .1029, .2965, .0256, .0534, .0177, .0202, .0708, .0281, .019, .0362, .0524, .0394, .0227, .028, .0233]),
    'F': np.array([.0216, .0174, .018, .0149, .0203, .0147, .0166, .0162, .0305, .0442, .0547, .0155, .0482, .3869, .0129, .0209, .0237, .0606, .1308, .0357]),
    'G': np.array([.0783, .0329, .0652, .0466, .0325, .0412, .035, .5101, .0382, .0206, .0213, .0432, .0281, .0254, .0362, .0663, .0434, .0303, .0249, .0247]),
    'H': np.array([.0148, .0233, .0315, .0187, .0081, .0294, .0258, .0135, .355, .0088, .0101, .0207, .0161, .0169, .0129, .0192, .0138, .0152, .0467, .0082]),
    'I': np.array([.0432, .0233, .0225, .0224, .0447, .0265, .0221, .0189, .0229, .271, .1154, .0276, .1004, .0634, .0258, .0297, .0533, .0303, .0436, .1646]),
    'K': np.array([.0445, .1202, .0539, .0448, .0203, .0912, .0755, .0337, .0458, .0236, .0253, .2781, .0361, .019, .0413, .0541, .0454, .0227, .0312, .0261]),
    'L': np.array([.0594, .0465, .0315, .028, .065, .0471, .0368, .0283, .0382, .1679, .3755, .0432, .1968, .1142, .0362, .0419, .0651, .053, .0685, .1303]),
    'M': np.array([.0175, .0155, .0112, .0093, .0163, .0206, .0129, .0094, .0153, .0368, .0496, .0155, .1606, .0254, .0103, .0157, .0197, .0152, .0187, .0316]),
    'N': np.array([.0256, .0388, .3169, .069, .0163, .0441, .0405, .0391, .0534, .0147, .0142, .0415, .0201, .0169, .0233, .0541, .0434, .0152, .0218, .0165]),
    'P': np.array([.0297, .0194, .0202, .0224, .0163, .0235, .0258, .0189, .0191, .0147, .0142, .0276, .0161, .0106, .4935, .0297, .0276, .0076, .0156, .0165]),
    'Q': np.array([.0256, .0484, .0337, .0299, .0122, .2147, .0645, .0189, .0382, .0133, .0162, .0535, .0281, .0106, .0207, .0332, .0276, .0152, .0218, .0165]),
    'R': np.array([.031, .345, .0449, .0299, .0163, .0735, .0497, .0229, .0458, .0177, .0243, .1071, .0321, .019, .0258, .0401, .0355, .0227, .028, .0219]),
    'S': np.array([.085, .0446, .0697, .0522, .0407, .0559, .0552, .0513, .042, .025, .0243, .0535, .0361, .0254, .0439, .2199, .0927, .0227, .0312, .0329]),
    'T': np.array([.0499, .0349, .0494, .0354, .0366, .0412, .0368, .0297, .0267, .0398, .0334, .0397, .0402, .0254, .0362, .082, .2465, .0227, .028, .0494]),
    'V': np.array([.0175, .0174, .0157, .0112, .0122, .0206, .0166, .0108, .0573, .0206, .0223, .0173, .0241, .0888, .0129, .0175, .0178, .0682, .3178, .0206]),
    'W': np.array([.0054, .0058, .0045, .0037, .0041, .0059, .0055, .0054, .0076, .0059, .0071, .0052, .008, .0169, .0026, .0052, .0059, .4924, .028, .0055]),
    'Y': np.array([.0688, .031, .027, .0243, .0569, .0353, .0313, .0243, .0229, .1767, .0962, .0328, .0924, .055, .031, .0419, .071, .0303, .0467, .2689])}
encoding_dicts = {
    'OneHot_20D': OneHot_20D,
    'BLOSUM62_20D': BLOSUM62_20D,
}   
def encoder(seq, encoding='OneHot_20D'):
    """Encode a protein sequence into a 20xL matrix"""
    encoding_func = encoding_dicts[encoding]
    return np.array([encoding_func[aa] for aa in seq.upper()])

if __name__ == '__main__':
    # Test
    seq1 = 'MAGNIFICENT'
    print(encoder(seq1, encoding='OneHot_20D'))
    print(encoder(seq1, encoding='BLOSUM62_20D'))
